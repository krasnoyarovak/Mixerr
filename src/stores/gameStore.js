import { defineStore } from 'pinia'

function generateRoomCode() {
  return Math.random().toString(36).substring(2, 7).toUpperCase()
}

export const useGameStore = defineStore('game', {
  //—Ñ—É–Ω–∫—Ü–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö—Ä–∞–Ω—è—Ç—Å—è –æ–±—ä–µ–∫—Ç—ã
  state: () => ({
    phrase: '',
    emojis: '',
    originalPhrase: '',
    showGuessInput: false, //—Ñ–ª–∞–≥ –¥–ª—è –æ–∫–Ω–∞ —É–≥–¥—ã–≤–∞–Ω–∏—è —Ñ—Ä–∞–∑—ã
    currentGuess: '',
    guesses: [],
    activeUserIndex: 0,
    currentUserIndex: 1,
    name: '',
    message: '',
    nickname: '',
    avatar: '',
    defaultAvatar: new URL('@/assets/img/smile_think.png', import.meta.url).href,
    roomCode: generateRoomCode(),
    users: [
      { name: '–ò–≥—Ä–æ–∫ 1', avatar: new URL('@/assets/img/smile_laugh.png', import.meta.url).href },
      { name: '–ò–≥—Ä–æ–∫ 2', avatar: new URL('@/assets/img/smile_think.png', import.meta.url).href },
      { name: '–ò–≥—Ä–æ–∫ 3', avatar: new URL('@/assets/img/smile_win.png', import.meta.url).href }
    ]
  }),
  //–º–µ—Ç–æ–¥—ã —Ö—Ä–∞–Ω–∏–ª–∏—â–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ state
  actions: {
    //–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –Ω–∞ —è–∑—ã–∫ —ç–º–æ–¥–∑–∏ (–≤–µ—Ä–Ω–µ—Ç –∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ —Ñ—Ä–∞–∑—ã, –∏–ª–∏ –æ—à–∏–±–∫—É)
    async submitPhrase() {
      this.emojis = '' 
      //–∑–∞–ø—Ä–æ—Å –¥–ª—è –∏–∏
      const prompt = `
–¢—ã ‚Äî Emoji MixBot, AI, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–≤–æ–¥–∏—Ç —Ñ—Ä–∞–∑—ã –Ω–∞ —è–∑—ã–∫ —ç–º–æ–¥–∑–∏.  
–¢–≤–æ—è —Ü–µ–ª—å: —Ç–æ—á–Ω–æ –∏ –∫—Ä–∞—Ç–∫–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–º—ã—Å–ª –≤—Ö–æ–¥–Ω–æ–π —Ñ—Ä–∞–∑—ã, –∏—Å–ø–æ–ª—å–∑—É—è –¢–û–õ–¨–ö–û —ç–º–æ–¥–∑–∏.

üìå –ü—Ä–∞–≤–∏–ª–∞:
1. ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û —ç–º–æ–¥–∑–∏.  
2. ‚ùå –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ç–µ–∫—Å—Ç, —Å–∏–º–≤–æ–ª—ã, –∫–∞–≤—ã—á–∫–∏, –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è, —Ü–∏—Ñ—Ä—ã, HTML –∏–ª–∏ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫.  
3. üßµ –û—Ç–≤–µ—Ç ‚Äî –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞.  
4. üß† –ü–µ—Ä–µ–¥–∞–≤–∞–π —Ç–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤–æ–π —Å–º—ã—Å–ª —Ñ—Ä–∞–∑—ã.  
5. ‚õî –ù–∏–∫–∞–∫–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π –∏–ª–∏ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤.

üî§ –í—Ö–æ–¥–Ω–∞—è —Ñ—Ä–∞–∑–∞: "${this.phrase}"

üîÅ –ü–µ—Ä–µ–≤–µ–¥–∏ –≤ —ç–º–æ–¥–∑–∏ (–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π):
`

      try {
        //–≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ—Å—Ç-–∑–∞–ø—Ä–æ—Å –∫ API OpenRouter
        const res = await fetch('https://openrouter.ai/api/v1/chat/completions', {
          method: 'POST', //–º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
          headers: { //–∑–∞–≥–æ–ª–æ–≤–∫–∏, —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä –ø–æ–Ω–∏–º–∞–ª, —á—Ç–æ –º—ã –æ—Ç –Ω–µ–≥–æ —Ö–æ—Ç–∏–º
            'Authorization': 'Bearer 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', //–∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–ø–∏
            'Content-Type': 'application/json', //—Ö–æ—Ç–∏–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ json
            'X-Title': 'mixerr',
            'HTTP-Referer': 'http://localhost:5173' //—Å –∫–∞–∫–æ–≥–æ —Å–∞–π—Ç–∞ –ø—Ä–∏—à–µ–ª –∑–∞–ø—Ä–æ—Å 
          },
          body: JSON.stringify({   //–ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –Ω–∞—à –æ–±—ä–µ–∫—Ç –≤ —Å—Ç—Ä–æ–∫—É json, —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä –Ω–∞—Å –ø–æ–Ω—è–ª
            model: 'deepseek/deepseek-r1-0528-qwen3-8b:free',
            messages: [{ role: 'user', content: prompt }]
          })
        })

        const data = await res.json() //–ø–µ—Ä–µ–≤–æ–¥–∏–º –∏–∑ json —Ñ–æ—Ä–º–∞—Ç–∞ –≤ js
        if (data.error) throw new Error(data.error.message) //–µ—Å–ª–∏ –≤ –æ—Ç–≤–µ—Ç–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤—ã–ª–µ–∑–ª–∞ –æ—à–∏–±–∫–∞, —Ç–æ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º 
        //–±–µ–∑–æ–ø–∞—Å–Ω–æ –¥–æ—Å—Ç–∞–µ–º –Ω–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –µ—Å–ª–∏ –≤—ã—Å–∫–æ—á–∏–ª–∞ –æ—à–∏–±–∫–∞, —Ç–æ emojis –ø—Ä–∏–º–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏
        this.emojis = data.choices?.[0]?.message?.content.trim() || ''
        this.originalPhrase = this.phrase.trim().toLowerCase() //—Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–≥–∞–¥–∞–Ω–Ω—É—é –∏–≥—Ä–æ–∫–æ–º —Ñ—Ä–∞–∑—É –≤ –Ω–æ—Ä–º –≤–∏–¥–µ
        this.phrase = '' //–æ—á–∏—â–∞–µ–º –ø–æ–ª—è –≤–≤–æ–¥–∞ —Ñ—Ä–∞–∑—ã
        this.showGuessInput = true 
        this.guesses = []
        this.currentUserIndex = (this.activeUserIndex + 1) % this.users.length 

      } catch (err) {
        this.emojis = '‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞'
        console.error('–û—à–∏–±–∫–∞ API:', err)
      }
    },

    submitGuess() {
      const normalizedGuess = this.currentGuess.trim().toLowerCase() //–ø—Ä–∏–≤–æ–¥–∏–º —É–≥–∞–¥–∞–Ω–Ω—É—é —Ñ—Ä–∞–∑—É –∫ —Ç–∞–∫–æ–º—É –∂–µ –≤–∏–¥—É (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ)
      const player = this.users[this.currentUserIndex]
      //–ø—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
      if (!player) {
        console.error('–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –∏–Ω–¥–µ–∫—Å—É:', this.currentUserIndex)
        return
      }
      //–µ—Å–ª–∏ –≤ —Å–ø–∏—Å–∫–µ —É–≥–∞–¥—ã–≤–∞—é—â–∏—Ö —É–∂–µ –µ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫, —Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
      const alreadyGuessed = this.guesses.some(g => g.name === player.name)
      if (alreadyGuessed) return

      const isCorrect = normalizedGuess === this.originalPhrase
      this.guesses.push({ name: player.name, correct: isCorrect })
      this.currentGuess = ''

      const nextIndex = (this.currentUserIndex + 1) % this.users.length
      //–∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º —Ä–∞—É–Ω–¥ –∏ –æ—á–∏—â–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –µ—Å–ª–∏ —Å–ª–µ–¥—É—é—â–∏–π –∏–≥—Ä–æ–∫ - —Ç–æ—Ç, –∫—Ç–æ –∑–∞–≥–∞–¥—ã–≤–∞–ª —Ñ—Ä–∞–∑—É
      if (nextIndex === this.activeUserIndex) {
        this.showGuessInput = false
        this.emojis = ''
        this.originalPhrase = ''

        setTimeout(() => {
          const winners = this.guesses.filter(g => g.correct).map(g => g.name)
          if (winners.length > 0) {
            const message = winners.length === 1
              ? `${winners[0]} —É–≥–∞–¥–∞–ª —Ñ—Ä–∞–∑—É! üéâ`
              : `${winners.join(' –∏ ')} —É–≥–∞–¥–∞–ª–∏ —Ñ—Ä–∞–∑—É! üéâ`
            alert(message)
          } else {
            alert('–ù–∏–∫—Ç–æ –Ω–µ —É–≥–∞–¥–∞–ª —Ñ—Ä–∞–∑—É üò¢')
          }
          this.guesses = []
          this.activeUserIndex = (this.activeUserIndex + 1) % this.users.length
          this.currentUserIndex = (this.activeUserIndex + 1) % this.users.length
        }, 100)

      } else {
        this.currentUserIndex = nextIndex
      }
    },

    submitForm() {
      alert(`–°–ø–∞—Å–∏–±–æ, ${this.name}! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "${this.message}"`)
      this.name = ''
      this.message = ''
    },

    handleAvatarUpload(e) {
      const file = e.target.files[0]
      if (file) this.avatar = URL.createObjectURL(file)
    }
  }
})
